// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.21.12
// source: bobadojo/menus/v1/menus.proto

package menuspb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	Menus_GetMenu_FullMethodName = "/bobadojo.menus.v1.Menus/GetMenu"
)

// MenusClient is the client API for Menus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Get information about store menus.
type MenusClient interface {
	// Returns a menu for a specific store.
	GetMenu(ctx context.Context, in *GetMenuRequest, opts ...grpc.CallOption) (*Menu, error)
}

type menusClient struct {
	cc grpc.ClientConnInterface
}

func NewMenusClient(cc grpc.ClientConnInterface) MenusClient {
	return &menusClient{cc}
}

func (c *menusClient) GetMenu(ctx context.Context, in *GetMenuRequest, opts ...grpc.CallOption) (*Menu, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Menu)
	err := c.cc.Invoke(ctx, Menus_GetMenu_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MenusServer is the server API for Menus service.
// All implementations must embed UnimplementedMenusServer
// for forward compatibility
//
// Get information about store menus.
type MenusServer interface {
	// Returns a menu for a specific store.
	GetMenu(context.Context, *GetMenuRequest) (*Menu, error)
	mustEmbedUnimplementedMenusServer()
}

// UnimplementedMenusServer must be embedded to have forward compatible implementations.
type UnimplementedMenusServer struct {
}

func (UnimplementedMenusServer) GetMenu(context.Context, *GetMenuRequest) (*Menu, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMenu not implemented")
}
func (UnimplementedMenusServer) mustEmbedUnimplementedMenusServer() {}

// UnsafeMenusServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MenusServer will
// result in compilation errors.
type UnsafeMenusServer interface {
	mustEmbedUnimplementedMenusServer()
}

func RegisterMenusServer(s grpc.ServiceRegistrar, srv MenusServer) {
	s.RegisterService(&Menus_ServiceDesc, srv)
}

func _Menus_GetMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenusServer).GetMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Menus_GetMenu_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenusServer).GetMenu(ctx, req.(*GetMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Menus_ServiceDesc is the grpc.ServiceDesc for Menus service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Menus_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bobadojo.menus.v1.Menus",
	HandlerType: (*MenusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMenu",
			Handler:    _Menus_GetMenu_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bobadojo/menus/v1/menus.proto",
}
